#!/usr/bin/python

import sys, signal, optparse, time

from   ldui.violation import ViolationHandler
from   ldui.common    import LogDateError, LogMissingError
from   dpkt.ip        import IP_PROTO_TCP, IP_PROTO_UDP

# globals
violation_handler = None
handled_handler   = None
proto_names       = { IP_PROTO_TCP : 'tcp', IP_PROTO_UDP : 'udp' }
commands          = ( 'violations', 'handled' )

def print_violations(raw, handled):
    '''Print all violations'''
    if not raw:
        print "%-5s %-10s %-6s %-6s %-16s %-5s %s" % ( 'id', 'user', 'proto', 'dport', 'dest', 'handled', 'binary' )

    # show handled or not handled violations
    function = violation_handler.get_not_handled
    if handled:
        function = violation_handler.get_handled

    for log in function():
        if raw:
            print repr(log)
        else:
            print "%-5s %-10s %-6s %-6s %-16s %-5s %s" % ( log['id'], log['user'], log['proto'], log['dport'],
                                                           log['dest'], log['handled'], log['bin'] )

# TODO: functions to suggest/make configuration additions based on violations and add handled violations to handled DB

def sigint_handler(signal, frame):
    ''' Clean up on close
    '''
    sys.exit(0)

curr_date = time.localtime()
parser = optparse.OptionParser()
parser.add_option('-y', '--year',
                  dest='year', default=curr_date.tm_year, type=int,
                  help='log year')
parser.add_option('-m', '--month',
                  dest='month', default=curr_date.tm_mon, type=int,
                  help='log month')
parser.add_option('-d', '--day',
                  dest='day', default=curr_date.tm_mday, type=int,
                  help='log day')
parser.add_option('-f', '--handled',
                  dest='handled', default=False, action='store_true',
                  help='Output handled violations')
parser.add_option('-r', '--raw',
                  dest='raw', default=False, action='store_true',
                  help='Output raw data')
parser.add_option('-b', '--base',
                  dest='base', default='.',
                  help='base install directory')
parser.add_option('-c', '--command',
                  dest='cmd', default='violations',  type='choice',
                  choices=commands, help='Output format')
options = ""
args    = ""

if __name__ == '__main__':
    (options, args) = parser.parse_args()
    signal.signal(signal.SIGINT, sigint_handler)

    if ( options.year or options.month or options.day ) is None:
        sys.stderr.write('Option missing: year, month or day\n')
        sys.exit(16107)
    try:
        violation_handler = ViolationHandler("%s/log" % options.base, (str(options.year), str(options.month), str(options.day)))
    except LogDateError as e:
        sys.stderr.write("%s\n" % e.msg)
        sys.exit(1)
    except LogMissingError as e:
        sys.stderr.write("%s\n" % e.msg)
        sys.exit(2)

    # run command given as argument or show all logs per default
    globals()['print_%s' % options.cmd](options.raw, options.handled)
